#!/bin/bash

exec > >(tee -i install.log) 2>&1
set -euo pipefail

# üé® Couleurs
RED="\e[31m"
GREEN="\e[32m"
YELLOW="\e[33m"
BLUE="\e[34m"
MAGENTA="\e[35m"
CYAN="\e[36m"
BOLD="\e[1m"
RESET="\e[0m"

function erreur {
    echo -e "${RED}‚ùå Erreur : $1${RESET}"
    echo -e "${YELLOW}‚ö†Ô∏è  Veuillez contacter l'√©diteur${RESET}"
    echo -e "üìß Email : ${CYAN}james.gbetchedji@epitech.eu${RESET}"
    echo -e "üìû Tel : ${CYAN}+22956549199${RESET}"
    exit 1
}

# V√©rif root
if [ "$(id -u)" -ne 0 ]; then
    echo -e "${RED}‚ùå Ce script doit √™tre ex√©cut√© en tant que root.${RESET}" >&2
    exit 1
fi

clear
sleep 1

echo -e "${CYAN}${BOLD}"
echo "üöÄ========================================üöÄ"
echo "     SCRIPT D'INSTALLATION DU DUMPS"
echo "             BY ${GREEN}NOGE${CYAN}"
echo "üöÄ========================================üöÄ"
echo -e "${RESET}"
sleep 2

echo -e "${YELLOW}‚ö° Veuillez suivre ce script attentivement${RESET}"
sleep 2
echo -e "${YELLOW}‚ùì Des questions peuvent √™tre pos√©es${RESET}"
sleep 2

clear
sleep 2

echo -e "${MAGENTA}üì¶ Ajout du d√©p√¥t Universe...${RESET}"
add-apt-repository -y -s universe || erreur "√âchec de l'ajout du d√©p√¥t universe"

echo -e "${MAGENTA}üîÑ Mise √† jour des paquets...${RESET}"
apt update || erreur "√âchec de la mise √† jour des paquets"

echo -e "${MAGENTA}‚¨ÜÔ∏è  Mise √† niveau du syst√®me...${RESET}"
apt upgrade -y || erreur "√âchec de la mise √† niveau des paquets"

echo "wireshark-common wireshark-common/install-setuid boolean true" | debconf-set-selections

# üì¶ Installation packages
echo -e "${GREEN}üì• Installation des paquets n√©cessaires...${RESET}"
packages_list=(
    avr-libc build-essential ca-certificates-java cabal-install cargo
    clang clang-tools cmake curl diffutils elfutils elpa-tuareg emacs-nox
    ffmpeg flac gcovr ghc golang haskell-stack ksh liballegro5-dev
    libboost1.74-all-dev libc-bin libc-dev-bin libc-devtools libc6
    libc6-dbg libcsfml-dev libcsfml-doc libcunit1 libcunit1-dev libelf-dev
    libfreetype-dev libgmp-dev libgmp10 libgmp10-doc libgmp3-dev
    libgmpxx4ldbl libgudev-1.0-dev libirrlicht-dev libirrlicht1.8
    libjpeg-turbo8-dev libncurses-dev libopenal-dev libsdl2-dev libsfml-doc
    libuuid1 libvirt-dev libvorbis-dev libx11-doc libx11-xcb-dev
    libxcb-image0 libxcb-image0-dev libxcb-util-dev libxcb-util0-dev
    libxcb-util1 libxcursor-dev libxext-dev libxext-doc libxi-dev
    libxinerama-dev libxrandr-dev locales ltrace nasm ncurses-base net-tools
    npm nodejs openjdk-21-jdk openjdk-21-jre php-bcmath php-dev php-gd
    php-mbstring php-mysql php-phar-io-version php-php-gettext php-tokenizer
    python3 python3-pycryptodome python3-dev python3-numpy python3-pip
    python3-pyte python3-requests python3-yaml qt6-base-dev qt6-base-dev-tools
    rlwrap ruby rustc strace sudo systemd-dev tar tcpdump tcsh tmux tree unzip
    uuid-dev valgrind vim virt-manager wireshark x264 zip zsh libcriterion-dev
    libsfml-dev libsfml-doc
)
export DEBIAN_FRONTEND=noninteractive
apt -y install "${packages_list[@]}" || erreur "√âchec de l'installation des paquets"

echo -e "${BLUE}üê≥ Installation de Docker...${RESET}"
apt remove -y docker docker.io containerd runc || true
apt update
apt -y install ca-certificates curl gnupg
systemctl enable --now docker || erreur "Echec de l'installation de Docker "

echo -e "${GREEN}‚öôÔ∏è Installation outils Epitech...${RESET}"
add-apt-repository -y -s ppa:epitech/ppa
apt update
export DEBIAN_FRONTEND=noninteractive
apt install -y epitech-cpool epitech-emacs epitech-vim
apt purge -y postfix

snap install teams-for-linux

echo -e "${BLUE}üõ†Ô∏è Installation de clang-20 et epiclang...${RESET}"
apt install -y wget
wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | tee /etc/apt/trusted.gpg.d/llvm.asc
echo "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/llvm.asc] https://apt.llvm.org/noble/ llvm-toolchain-noble-20 main" | tee /etc/apt/sources.list.d/llvm.list
wget -O - https://epitech.github.io/epiclang/key.asc | tee /etc/apt/trusted.gpg.d/epiclang-apt.asc
echo "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/epiclang-apt.asc] https://epitech.github.io/epiclang/ testing main" | tee /etc/apt/sources.list.d/epiclang.list
apt update
apt install -y clang-20 epiclang
update-alternatives --install /usr/bin/clang clang /usr/bin/clang-20 100
update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-20 100

echo -e "${CYAN}üìú Installation du coding-style...${RESET}"
wget -O - "https://raw.githubusercontent.com/nogebeat/deb-ubuntu-epitech/refs/heads/main/code.sh" | sudo bash -s || erreur "Echec du coding-style de Noge"
wget -O - "https://raw.githubusercontent.com/nogebeat/deb-ubuntu-epitech/refs/heads/main/header-epitech.sh" | bash -s || erreur "Echec headers Epitech"
wget https://raw.githubusercontent.com/Epitech/coding-style-checker/main/coding-style.sh -P /tmp/
chmod +x /tmp/coding-style.sh
mv /tmp/coding-style.sh /usr/local/bin/coding-style

usermod -aG docker $USER || erreur "Echec ajout groupe docker"

new-style . . || erreur "Echec test coding style "

docker --version

cd /tmp
git clone https://github.com/nogebeat/coding-style-checker.git
cd coding-style-checker
sudo cp lambdananas /usr/local/bin
sudo chmod +x /usr/local/bin/lambdananas

clear
echo -e "${GREEN}${BOLD}"
echo "‚úÖ================================================‚úÖ"
echo "   üéâ Installation termin√©e avec succ√®s ! üéâ"
echo "   üë®‚Äçüíª Coding-Style by ${CYAN}NOGE${GREEN} pr√™t √† l'emploi"
echo "‚úÖ================================================‚úÖ"
echo -e "${RESET}"

echo -e "üí° Commandes disponibles :"
echo -e "   - ${YELLOW}coding-style . .${RESET} ‚Üí V√©rifier avec le style officiel"
echo -e "   - ${YELLOW}new-style . .${RESET} ‚Üí V√©rifier avec la version ${MAGENTA}optimis√©e de NOGE${RESET}"
echo
echo -e "${RED}‚ö†Ô∏è  Pensez √† red√©marrer votre PC apr√®s l'installation !${RESET}"
